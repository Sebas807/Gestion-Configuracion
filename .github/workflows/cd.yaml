name: CD

on:
  push:
    branches: [master]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Build Docker image
      run: docker build -t sebas807/gestion_configuracion:opcx .
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}
      
    - name: Push Docker image to DockerHub
      run: docker push sebas807/gestion_configuracion:opcx
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2


    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.4.6


    - name: Run terraform fmt check
      run: terraform fmt -check -diff -recursive


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


    - name: Initialize Terraform
      run: |
        cd terraform/
        terraform init -input=false         


    - name: Plan Terraform
      id: plan
      continue-on-error: true
      run: |
        cd terraform/
        terraform plan -input=false -no-color 


    - name: Apply Terraform
      if: ${{ steps.plan.outcome == 'success' }}
      run: |
        cd terraform/
        terraform apply -input=false -auto-approve

